{
    "openapi": "3.0.2",
    "info": {
      "title": "Express Auth App",
      "version": "1.0",
      "description": "Api documentation and test"
    },
    "servers": [
      {
        "url": "http://localhost:8080/"
      }
    ],
    "tags": [
      {
        "name": "Auth",
        "description": "Autorization API"
      }
    ],
    "paths": {
      "/auth/signin": {
        "post": {
          "summary": "Returns the authentication  cookie and user",
          "description": "Get tokens and user info",
          "tags": ["Auth"],
          "requestBody": {
            "$ref": "#/components/requestBodies/Autorization"
          },
          "responses": {
            "200": {
              "description": "Successeful login.   Response is returned in a cookie named `refreshToken`.  You need to include this cookie in subsequent requests\n",
              "headers": {
                "Set-Cookie": {
                  "schema": {
                    "type": "string",
                    "example": "refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsb2dpbiI6IklNYXNrQGltYXNrLnJ1IiwiaWF0IjoxNjkxNjE0MDk5LCJleHAiOjE2OTE2MTc2OTl9.raq5-L2_IzcMoC7TgSjfFMfpyFuMF5grRJy43Qm-9zc; Path=/; HttpOnly"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                  "$ref": "#/components/schemas/AutorizationResponse"
                  }
                }
              }
            },
            "400":{
              "$ref": "#/components/responses/400"
            },
            "401":{
              "$ref": "#/components/responses/401"
            }
            
          }
        }
      },
      "/auth/signup": {
        "post": {
          "summary": "User registration in bd",
          "description": "Get tokens and user info",
          "tags": ["Auth"],
          "requestBody": {
            "$ref": "#/components/requestBodies/Autorization"
          },
          "responses": {
            "201": {
              "description": "Registration succsess. Resoinse is returned in a cookie named `refreshToken`.  You need to include this cookie in subsequent requests\n",
              "headers": {
                "Set-Cookie": {
                  "schema": {
                    "type": "string",
                    "example": "refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsb2dpbiI6IklNYXNrQGltYXNrLnJ1IiwiaWF0IjoxNjkxNjE0MDk5LCJleHAiOjE2OTE2MTc2OTl9.raq5-L2_IzcMoC7TgSjfFMfpyFuMF5grRJy43Qm-9zc; Path=/; HttpOnly"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                  "$ref": "#/components/schemas/AutorizationResponse"
                  }
                }
              }
            },
            "400":{
              "$ref": "#/components/responses/400"
            },
            "401":{
              "$ref": "#/components/responses/401"
            }
            
          }
        }
      },
      "/auth/signout": {
        "post": {
          "summary": "Loguot from application",
          "description": "Delete user's refresh token from DB",
          "tags": ["Auth"],
          "responses": {
            "204": {
              "description": "Logout succsess. Deleted cookie named `refreshToken`.\n"
            },
            "400":{
              "$ref": "#/components/responses/400"
            },
            "401":{
              "$ref": "#/components/responses/401"
            }
            
          }
        }
      },
      "/auth/refresh": {
        "get": {
          "summary": "Refresh tokens",
          "description": "If there is valid token in cookie return a new pair of tokens will be returned",
          "tags": ["Auth"],
          "responses": {
            "200": {
              "description": "Tokens updated. Response is returned in a cookie named `refreshToken`. You need to include this cookie in subsequent requests" , 
              "headers": {
                "Set-Cookie": {
                  "schema": {
                    "type": "string",
                    "example": "refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsb2dpbiI6IklNYXNrQGltYXNrLnJ1IiwiaWF0IjoxNjkxNjE0MDk5LCJleHAiOjE2OTE2MTc2OTl9.raq5-L2_IzcMoC7TgSjfFMfpyFuMF5grRJy43Qm-9zc; Path=/; HttpOnly"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                  "$ref": "#/components/schemas/AutorizationResponse"
                  }
                }
              }
            },
            "400":{
              "$ref": "#/components/responses/400"
            },
            "401":{
              "$ref": "#/components/responses/401"
            }
            
          }
        }
      }
    },
    "components" : {
      "requestBodies": {
        "Autorization": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "login",
                  "password"
                ],
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "login": "Vasy@mail.ru",
                  "password": "newVasy"
                }
              }
            }
          }
        }
      },
    
      "schemas": {
        "AutorizationResponse": {
          "required": ["accessToken"],
          "properties": {
            "accessToken": {
              "type":"string"
              
            },
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "login": {
                  "type":"string"
                }
              }
            
            }      
          }
        },
        "User":{
          "required": [
            "login",
            "password"
          ],
          "properties": {
            "login": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          },
          "example": {
            "login": "Vasy@mail.ru",
            "password": "newVasy"
          }

        },
        "ErrorResponse": {
          "required": [
            "statusCode",
            "message"
          ],
          "properties": {
            "statusCode": {
              "type": "integer"
            },
            "message": {
              "type": "string"
            },
            "errors":{
              "type": "array",
              "items":{
                "type": "string"
              }
            }     
          },
          "example": {
            "statusCode": "4xx",
            "message": "reason",
            "errors":[]
          }
        }
      },
    "responses": {
      "400":{
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "401": {
        "description": "Authorization error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    }
    }
  }