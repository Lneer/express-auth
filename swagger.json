{
  "openapi": "3.1.0",
    "info": {
      "version": "1.0.0", 
      "title": "Express Auth App ",
      "description": "API for test",
      "license": "ISC"
    },
  
    "tags": [
      {
        "name": "Auth",
        "description": "Autorization API"
      }
    ],
    "securityDefinitions":{
      "Bearer":{
        "type": "apiKey",
        "name": "Authorization",
        "description": "Enter your token in format *Bearer token*",
        "in": "header"
      }
    },
    "paths":{
      "/auth/signin": {
        "post": {
          "tags": ["Auth"],
          "summary": "Login and returns the authentication  cookie",
          "description": "Get token",
          "requestBody": {},
          "parameters": [
            {
              "name": "AuthInfo",
              "in": "body",
              "description": "User auth info",
              "schema": {
                "required": [
                  "login",
                  "password"
                ],
                "properties": {
                  "login": {
                    "type": "string"
                  },       
                  "password": {
                    "type": "string"
                  }       
                },
                "example": {
                  "login": "IMask",
                  "password": "Tesla4ever"
                }
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "Successeful login.  The session ID is returned in a cookie named `refreshToken`. You need to include this cookie in subsequent requests.",
              "header":{
                "Set-Cookie": {
                  "schema": {
                    "type": "string",
                    "example":"refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsb2dpbiI6IklNYXNrQGltYXNrLnJ1IiwiaWF0IjoxNjkxNjE0MDk5LCJleHAiOjE2OTE2MTc2OTl9.raq5-L2_IzcMoC7TgSjfFMfpyFuMF5grRJy43Qm-9zc"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "token": {
                        "type":"string"
                      },
                      "user": {
                        "type": "object"
                      }      
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "401": {
              "description": "Authorization error",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/auth/signup": {
        "post": {
          "tags": ["Auth"],
          "summary": "SignUp",
          "description": "Create new User",
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "required": [
                  "name",
                  "login",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "login": {
                    "type": "string"
                  },       
                  "password": {
                    "type": "string"
                  }       
                },
                "example": {
                  "name": "Ilon Mask",
                  "login": "IMask",
                  "password": "Tesla4ever"
                }
              }
              
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "New user is created",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"              
              }
            },
            "409": {
              "description": "Login already exist",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/auth/signout": {
        "post": {
          "tags": ["Auth"],
          "summary": "SignUp",
          "description": "Create new User",
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "required": [
                  "name",
                  "login",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "login": {
                    "type": "string"
                  },       
                  "password": {
                    "type": "string"
                  }       
                },
                "example": {
                  "name": "Ilon Mask",
                  "login": "IMask",
                  "password": "Tesla4ever"
                }
              }
              
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "New user is created",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"              
              }
            },
            "409": {
              "description": "Login already exist",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/auth/refresh": {
        "get": {
          "tags": ["Auth"],
          "summary": "Refresh",
          "description": "Create new User",
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "required": [
                  "name",
                  "login",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "login": {
                    "type": "string"
                  },       
                  "password": {
                    "type": "string"
                  }       
                },
                "example": {
                  "name": "Ilon Mask",
                  "login": "IMask",
                  "password": "Tesla4ever"
                }
              }
              
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "New user is created",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Bad Request",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"              
              }
            },
            "409": {
              "description": "Login already exist",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "definitions" : {
      "User": {
        "required": [
          "_id",
          "name",
          "login"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "login": {
            "type": "string"
          }      
        }
      },
      "ErrorResponse": {
        "required": [
          "statusCode",
          "message"
        ],
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "message": {
            "type": "string"
          }     
        },
        "example": {
          "statusCode": "4xx",
          "message": "reason"
        }
      }
    }
}